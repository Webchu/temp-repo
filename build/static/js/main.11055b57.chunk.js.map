{"version":3,"sources":["components/PostCard/index.jsx","components/Posts/index.jsx","utils/load-posts.js","components/Button/index.jsx","components/TextInput/index.jsx","templates/Home/index.jsx","index.js"],"names":["PostCard","title","cover","body","id","className","src","alt","Posts","posts","map","post","loadPosts","a","postsResponse","fetch","photosResponse","Promise","all","photos","json","postsJson","photosJson","postsAndPhotos","index","url","Button","this","props","text","onClick","disabled","Component","TextInput","searchValue","handleChange","onChange","value","type","placeholder","Home","state","allPosts","page","postsPerPage","setState","slice","loadMorePosts","nextPage","nextPosts","push","e","target","noMorePosts","length","filteredPosts","filter","toLowerCase","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.11055b57.chunk.js","sourcesContent":["import './styles.css';\r\n\r\nexport const PostCard = ({title, cover, body, id}) => (\r\n    <div className=\"post\">\r\n        <img src={cover} alt={title} />\r\n        <div className=\"post-content\">\r\n            <h2>{title}</h2>\r\n            <p>{body}</p>\r\n        </div>\r\n    </div>\r\n)","import './styles.css';\r\nimport { PostCard } from \"../PostCard\";\r\n\r\nexport const Posts = ({ posts }) => (\r\n    <div className=\"posts\">\r\n        {posts.map(post => (\r\n            <PostCard\r\n                key={post.id}\r\n                id={post.id}\r\n                title={post.title}\r\n                body={post.body}\r\n                cover={post.cover}\r\n            />\r\n        )\r\n        )}\r\n    </div>\r\n)","export const loadPosts = async () => {\r\n    const postsResponse = fetch('https://jsonplaceholder.typicode.com/posts');\r\n    const photosResponse = fetch('https://jsonplaceholder.typicode.com/photos');\r\n\r\n    const [posts, photos] = await Promise.all([postsResponse, photosResponse]);\r\n\r\n    const postsJson = await posts.json();\r\n    const photosJson = await photos.json();\r\n\r\n    const postsAndPhotos = postsJson.map((post, index) => {\r\n      return { ...post, cover: photosJson[index].url }\r\n    });\r\n\r\n    return postsAndPhotos;\r\n}","import './styles.css';\r\n\r\nimport { Component } from \"react\";\r\n\r\nexport class Button extends Component {\r\n    render() {\r\n        const {text, onClick, disabled} = this.props;\r\n        return (\r\n            <button \r\n                disabled={disabled}\r\n                className='button' \r\n                onClick={onClick}>\r\n                {text}\r\n            </button>\r\n        );\r\n    }\r\n}","import './styles.css';\r\n\r\nexport const TextInput = ({ searchValue, handleChange }) => (\r\n    <input\r\n        className='text-input'\r\n        onChange={handleChange}\r\n        value={searchValue}\r\n        type=\"search\"\r\n        placeholder='Type your search'\r\n    />\r\n);","import { Component } from 'react';\n\nimport './styles.css';\n\nimport { Posts } from '../../components/Posts';\nimport { loadPosts } from '../../utils/load-posts';\nimport { Button } from '../../components/Button';\nimport { TextInput } from '../../components/TextInput';\n\nclass Home extends Component {\n  state = {\n    posts: [],\n    allPosts: [],\n    page: 0,\n    postsPerPage: 10,\n    searchValue: ''\n  };\n\n  async componentDidMount() {\n    await this.loadPosts();\n  }\n\n  componentDidUpdate() {\n  }\n\n  componentWillUnmount() {\n  }\n\n  loadPosts = async () => {\n    const { page, postsPerPage } = this.state;\n\n    const postsAndPhotos = await loadPosts();\n    this.setState({\n      posts: postsAndPhotos.slice(page, postsPerPage),\n      allPosts: postsAndPhotos\n    });\n  }\n\n  loadMorePosts = () => {\n    const {\n      page,\n      postsPerPage,\n      allPosts,\n      posts\n    } = this.state;\n    const nextPage = page + postsPerPage;\n    const nextPosts = allPosts.slice(nextPage, nextPage + postsPerPage);\n\n    posts.push(...nextPosts);\n\n    this.setState({ posts, page: nextPage});\n  }\n\n  handleChange = (e) => {\n    const { value } = e.target;\n    this.setState({ searchValue: value });\n  }\n\n  render() {\n    const { posts, page, postsPerPage, allPosts, searchValue } = this.state;\n    const noMorePosts = page + postsPerPage >= allPosts.length;\n\n    const filteredPosts = !!searchValue ? \n      allPosts.filter(post => {\n        return post.title.toLowerCase().includes(searchValue.toLowerCase());\n      }) \n      : posts;\n\n    return (\n      <section className=\"container\">\n\n        <div className=\"search-container\">\n          {!!searchValue && (\n            <h1>Search value: {searchValue}</h1>\n          )}\n          \n          <TextInput \n            searchValue={searchValue} \n            handleChange={this.handleChange} \n          />\n        </div>\n\n        {filteredPosts.length > 0 && (\n          <Posts posts={filteredPosts} />\n        )}\n\n        {filteredPosts.length === 0 && (\n          <p>Nenhum registro encontrado</p>\n        )}\n\n        <div className=\"button-container\">\n          {!searchValue && (\n            <Button \n              text=\"Load more posts\" \n              onClick={this.loadMorePosts}\n              disabled={noMorePosts}\n            />\n          )}\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default Home;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './styles/global-styles.css';\n\nimport Home from './templates/Home';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Home />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}